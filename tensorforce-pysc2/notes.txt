
did 6M steps on collect mineral shards in about 2 days on the 1070
about twice as fast on 1080ti machine

obs_spec:
{'action_result': (0,), 'alerts': (0,), 'available_actions': (0,), 'build_queue': (0, 7), 'cargo': (0, 7), 'cargo_slots_available': (1,), 'control_groups': (10, 2), 'game_loop': (1,), 'last_actions': (0,), 'multi_select': (0, 7), 'player': (11,), 'score_cumulative': (13,), 'score_by_category': (11, 5), 'score_by_vital': (3, 3), 'single_select': (0, 7), 'feature_screen': (17, 84, 84), 'feature_minimap': (7, 64, 64)}

action_spec:
ValidActions(
    types=Arguments(
        screen=ArgumentType(id=0, name='screen', sizes=(84, 84), fn=None, values=None),
        minimap=ArgumentType(id=1, name='minimap', sizes=(64, 64), fn=None, values=None),
        screen2=ArgumentType(id=2, name='screen2', sizes=(84, 84), fn=None, values=None),
        queued=ArgumentType(id=3, name='queued', sizes=(2,), fn=None, values=None),
        control_group_act=ArgumentType(id=4, name='control_group_act', sizes=(5,), fn=None, values=None),
        control_group_id=ArgumentType(id=5, name='control_group_id', sizes=(10,), fn=None, values=None),
        select_point_act=ArgumentType(id=6, name='select_point_act', sizes=(4,), fn=None, values=None),
        select_add=ArgumentType(id=7, name='select_add', sizes=(2,), fn=None, values=None),
        select_unit_act=ArgumentType(id=8, name='select_unit_act', sizes=(4,), fn=None, values=None),
        select_unit_id=ArgumentType(id=9, name='select_unit_id', sizes=(500,), fn=None, values=None),
        select_worker=ArgumentType(id=10, name='select_worker', sizes=(4,), fn=None, values=None),
        build_queue_id=ArgumentType(id=11, name='build_queue_id', sizes=(10,), fn=None, values=None),
        unload_id=ArgumentType(id=12, name='unload_id', sizes=(500,), fn=None, values=None)
    ),
    functions=<pysc2.lib.actions.Functions object at 0x000002E76E9618D0>
)


all_actions:
{'function': {'type': 'int', 'num_actions': 549}, 'screen': {'type': 'int', 'shape': (2,), 'num_actions': 84}, 'minimap': {'type': 'int', 'shape': (2,), 'num_actions': 64}, 'screen2': {'type': 'int', 'shape': (2,), 'num_actions': 84}, 'queued': {'type': 'int', 'shape': (1,), 'num_actions': 2}, 'control_group_act': {'type': 'int', 'shape': (1,), 'num_actions': 5}, 'control_group_id': {'type': 'int', 'shape': (1,), 'num_actions': 10}, 'select_point_act': {'type': 'int', 'shape': (1,), 'num_actions': 4}, 'select_add': {'type': 'int', 'shape': (1,), 'num_actions': 2}, 'select_unit_act': {'type': 'int', 'shape': (1,), 'num_actions': 4}, 'select_unit_id': {'type': 'int', 'shape': (1,), 'num_actions': 500}, 'select_worker': {'type': 'int', 'shape': (1,), 'num_actions': 4}, 'build_queue_id': {'type': 'int', 'shape': (1,), 'num_actions': 10}, 'unload_id': {'type': 'int', 'shape': (1,), 'num_actions': 500}}

Examples of actions the tf agent is returning:

{'build_queue_id': array([8]), 'control_group_act': array([3]), 'control_group_id': array([9]), 'function': 522, 'minimap': array([35, 10]), 'queued': array([1]), 'screen': array([ 3, 68]), 'screen2': array([71, 42]), 'select_add': array([0]), 'select_point_act': array([2]), 'select_unit_act': array([2]), 'select_unit_id': array([135]), 'select_worker': array([2]), 'unload_id': array([327])}

{'build_queue_id': array([3]), 'control_group_act': array([3]), 'control_group_id': array([7]), 'function': 397, 'minimap': array([36, 26]), 'queued': array([0]), 'screen': array([75, 50]), 'screen2': array([70, 62]), 'select_add': array([0]), 'select_point_act': array([3]), 'select_unit_act': array([0]), 'select_unit_id': array([72]), 'select_worker': array([0]), 'unload_id': array([235])}

{'build_queue_id': array([4]), 'control_group_act': array([0]), 'control_group_id': array([7]), 'function': 56, 'minimap': array([ 4, 31]), 'queued': array([0]), 'screen': array([11, 33]), 'screen2': array([ 5, 83]), 'select_add': array([1]), 'select_point_act': array([2]), 'select_unit_act': array([0]), 'select_unit_id': array([183]), 'select_worker': array([3]), 'unload_id': array([156])}

{'build_queue_id': array([2]), 'control_group_act': array([3]), 'control_group_id': array([1]), 'function': 329, 'minimap': array([31, 27]), 'queued': array([0]), 'screen': array([38,  7]), 'screen2': array([54, 40]), 'select_add': array([0]), 'select_point_act': array([1]), 'select_unit_act': array([0]), 'select_unit_id': array([331]), 'select_worker': array([3]), 'unload_id': array([135])}

{'build_queue_id': array([7]), 'control_group_act': array([4]), 'control_group_id': array([5]), 'function': 125, 'minimap': array([62, 59]), 'queued': array([0]), 'screen': array([10, 40]), 'screen2': array([20, 16]), 'select_add': array([0]), 'select_point_act': array([1]), 'select_unit_act': array([0]), 'select_unit_id': array([452]), 'select_worker': array([2]), 'unload_id': array([170])}


obs is a TimeStep - a namedtuple with:
	step_type
	reward
	discount
	observation - a dict with:
		single_select
		multi_select
		build_queue
		cargo
		cargo_slots_available
		feature_screen
		feature_minimap

		last_actions - list: function ids of some number of previous actions
		action_result - list (usually size 1): results of previous action(s), using enum in sc2client-proto/sc2clientprotocol/error.proto
		alerts - a list of size 0-2 indicating a major attack
		game_loop - ?? probably number of frames or steps
		score_cumulative - for scores see pysc2/lib/features.py
		score_by_category
		score_by_vital

		player - list of general player information like player_id, minelas, vespene, suppy, etc.
		control_groups
		available_actions